<?php

function rndEncode($s) {
    // Şifrelenmiş veri çıkış alfabesi
    $cikis = array('0' => '0', '1' => '1', '2' => '2', '3' => '3', '4' => '4', '5' => '5', '6' => '6', '7' => '7', '8' => '8', '9' => '9', '10' => 'A', '11' => 'B', '12' => 'C', '13' => 'D', '14' => 'E', '15' => 'F', '16' => 'G', '17' => 'H', '18' => 'I', '19' => 'J', '20' => 'K', '21' => 'L', '22' => 'M', '23' => 'N', '24' => 'O', '25' => 'P', '26' => 'Q', '27' => 'R', '28' => 'S', '29' => 'T', '30' => 'U', '31' => 'V', '32' => 'W', '33' => 'X', '34' => 'Y', '35' => 'Z', '36' => 'a', '37' => 'b', '38' => 'c', '39' => 'd', '40' => 'e', '41' => 'f', '42' => 'g', '43' => 'h', '44' => 'i', '45' => 'j', '46' => 'k', '47' => 'l', '48' => 'm', '49' => 'n', '50' => 'o', '51' => 'p', '52' => 'q', '53' => 'r', '54' => 's', '55' => 't', '56' => 'u', '57' => 'v', '58' => 'w', '59' => 'x', '60' => 'y', '61' => 'z', '62' => '/');
    $o = "";

    // Türkçe karakter sorunu için (ISO-8859-9)
    $s = mb_convert_encoding($s, "ISO-8859-9", "UTF-8");

    for ($i = 0; $i < strlen($s); $i += 3) {
        $ss = substr($s, $i, 3);

        $c1x = isset($ss[0]) ? $ss[0] : '*rnd*';
        $c2x = isset($ss[1]) ? $ss[1] : '*rnd*';
        $c3x = isset($ss[2]) ? $ss[2] : '*rnd*';

        $c1 = ord($c1x);
        $c2 = ord($c2x);
        $c3 = ord($c3x);

        $k1 = ($c1) / 4;
        $k2 = ($c1) % 4;
        $k3 = ($c2) / 16;
        $k4 = ($c2) % 16;
        $k5 = ($c3) / 64;
        $k6 = ($c3) % 64;

        $ec1 = $cikis[$k1];
        $ec2 = $cikis[$k2 * 16];
        $ec2_2 = $cikis[$k3 + $k2 * 16];
        $ec3 = $cikis[$k5 + $k4 * 4];
        $ec4 = $cikis[$k6];

        if ($c1x !== '*rnd*' && $c2x === '*rnd*' && $c3x === '*rnd*') {
            $o .= $ec1 . $ec2;
        } else if ($c1x !== '*rnd*' && $c2x !== '*rnd*' && $c3x === '*rnd*') {
            $o .= $ec1 . $ec2_2 . $ec3;
        } else if ($c1x !== '*rnd*' && $c2x !== '*rnd*' && $c3x !== '*rnd*') {
            $o .= $ec1 . $ec2_2 . $ec3 . $ec4;
        } else {
            $o .= '';
        }
    }
    return trim($o);
}

function rndDecode($s) {
    // Şifrelenmiş veri giriş alfabesi
    $cikis = array('0' => '0', '1' => '1', '2' => '2', '3' => '3', '4' => '4', '5' => '5', '6' => '6', '7' => '7', '8' => '8', '9' => '9', 'A' => '10', 'B' => '11', 'C' => '12', 'D' => '13', 'E' => '14', 'F' => '15', 'G' => '16', 'H' => '17', 'I' => '18', 'J' => '19', 'K' => '20', 'L' => '21', 'M' => '22', 'N' => '23', 'O' => '24', 'P' => '25', 'Q' => '26', 'R' => '27', 'S' => '28', 'T' => '29', 'U' => '30', 'V' => '31', 'W' => '32', 'X' => '33', 'Y' => '34', 'Z' => '35', 'a' => '36', 'b' => '37', 'c' => '38', 'd' => '39', 'e' => '40', 'f' => '41', 'g' => '42', 'h' => '43', 'i' => '44', 'j' => '45', 'k' => '46', 'l' => '47', 'm' => '48', 'n' => '49', 'o' => '50', 'p' => '51', 'q' => '52', 'r' => '53', 's' => '54', 't' => '55', 'u' => '56', 'v' => '57', 'w' => '58', 'x' => '59', 'y' => '60', 'z' => '61', '/' => '62');
        $o = "";

        $s = substr(chunk_split($s, 4, ':'), 0, -1);

        $char = explode(":", $s);

        for ($i = 0; $i < count($char); $i++) {
            $ss = str_pad($char[$i], 4, '0', STR_PAD_RIGHT);

            $c1 = $cikis[$ss[0]];
            $c2 = $cikis[$ss[1]] + ($ss[0] == '/' ? 64 : 0);
            $c3 = $cikis[$ss[2]] + ($ss[1] == '/' ? 64 : 0);
            $c4 = $cikis[$ss[3]] + ($ss[2] == '/' ? 64 : 0);

            $r1 = ($c2 * 16) / 255;
            $r2 = ($c3 * 64) / 255;

            $dc1 = ($c1 * 4 + $r1);
            $dc2 = (($c2 * 16 + $r2) % 256);
            $r3 = min(254, ($c3 - $dc2 % 16 * 4) % 64 * 64 + $c4);
            $dc3 = $c4 != -1 ? $r3 : "0";

            $o .= chr(intval($dc1));
            if ($c3 != -1) {
                $o .= chr(intval($dc2));
            }
            if ($c4 != -1) {
                $o .= chr(intval($dc3));
            }
        }

        $o = iconv('ISO-8859-9', "UTF-8", $o);
        return trim($o);
}

function test() {
    $enc = rndEncode('DENEME');
    $dec = rndDecode($enc);
    echo 'Şifrelenmiş veri:' . $enc . ' | Şifresi çözülmüş veri:' . $dec;
}

?>
